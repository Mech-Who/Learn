//#region 接口类型
/**
 * 类似于对象类型字面量，接口类型也能够表示任意的对象类型。
 * 不同的是，接口类型能够给对象类型命名以及定义类型参数。
 * 接口类型无法表示原始类型，如boolean类型等。
 * 接口声明只存在于编译阶段，在编译后生成的JavaScript代码中不包含任何接口代码。
 */

//#region 接口声明
/**
 * 通过接口声明能够定义一个接口类型。接口声明的基础语法如下所示：
 *
 * interface InterfaceName{
 * TypeMember;
 * TypeMember;
 * ...
 *
 * }
 *
 * 在该语法中，interface是关键字，InterfaceName表示接口名，
 * 它必须是合法的标识符，TypeMember表示接口的类型成员，
 * 所有类型成员都置于一对大括号“{}”之内。按照惯例，接口名的首字母需要大写。
 * 因为接口定义了一种类型，而类型名的首字母通常需要大写。
 * 示例如下：
 */
interface ShapeP {}

/**
 * 在接口名之后，由一对大括号“{}”包围起来的是接口类型中的类型成员。
 * 这部分的语法与5.11.3节中介绍的对象类型字面量的语法完全相同。
 * 从语法的角度来看，接口声明就是在对象类型字面量之前添加了interface关键字和接口名。
 * 因此，在5.11.3节中介绍的语法规则同样适用于接口声明。
 * 例如，类型成员间的分隔符和类型成员的尾后分号、逗号。
 * 
 * 同样地，接口类型的类型成员也分为以下五类：
 * 
 * 1. 属性签名
 * 2. 调用签名
 * 3. 构造签名
 * 4. 方法签名
 * 5. 索引签名
 * 
 * 在5.11.3节中，我们详细介绍了属性签名。
 * 在5.12节中，我们详细介绍了调用签名和构造签名。
 * 这三种类型成员同样适用于接口类型。
 * 下面我们将简要回顾一下属性签名、调用签名和构造签名的语法，
 * 并着重介绍索引签名和方法签名。
 */

//#endregion

//#endregion
